<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Ant suite" duration-ms="46032" started-at="2017-02-09T14:35:09Z" finished-at="2017-02-09T14:35:55Z">
    <groups>
    </groups>
    <test name="Ant test" duration-ms="46032" started-at="2017-02-09T14:35:09Z" finished-at="2017-02-09T14:35:55Z">
      <class name="com.test1.tests.RTest">
        <test-method status="PASS" signature="beforSuite()[pri:0, instance:com.test1.tests.RTest@52d455b8]" name="beforSuite" is-config="true" duration-ms="10" started-at="2017-02-09T09:35:09Z" finished-at="2017-02-09T09:35:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforSuite -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.test1.tests.RTest@52d455b8]" name="beforeMethod" is-config="true" duration-ms="6383" started-at="2017-02-09T09:35:09Z" finished-at="2017-02-09T09:35:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSuccessfulBusinessAccountRegistration(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.test1.tests.RTest@52d455b8]" name="testSuccessfulBusinessAccountRegistration" duration-ms="16020" started-at="2017-02-09T09:35:16Z" data-provider="dataProvider" finished-at="2017-02-09T09:35:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[tester777777711001a@mytest.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Rodney]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[King]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rodneypassword]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[rodneypassword]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[770-458-9764]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[9999.0]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[30309.0]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Rrodney Vid Games]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[3251 Peachtree Road]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Atlanta]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[GA]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Retail]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Other]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulBusinessAccountRegistration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.test1.tests.RTest@52d455b8]" name="afterMethod" is-config="true" duration-ms="1439" started-at="2017-02-09T09:35:32Z" finished-at="2017-02-09T09:35:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.test1.tests.RTest@52d455b8]" name="beforeMethod" is-config="true" duration-ms="5441" started-at="2017-02-09T09:35:33Z" finished-at="2017-02-09T09:35:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testSuccessfulBusinessAccountRegistration(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.test1.tests.RTest@52d455b8]" name="testSuccessfulBusinessAccountRegistration" duration-ms="15204" started-at="2017-02-09T09:35:38Z" data-provider="dataProvider" finished-at="2017-02-09T09:35:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[tester9997777711001a@tester.net]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Darrell]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Gates]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[password1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[678-996-4435]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[9999]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[30305]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Ddarrel Bbbq Atl]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[19951 Peachtree Rd]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Atlanta]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[GA]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Restaurant]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Casual]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.test1.pages.JobSeekerPage.isCreateBusinessAccountSuccessful(JobSeekerPage.java:28)
	at com.test1.tests.RTest.testSuccessfulBusinessAccountRegistration(RTest.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.testng.TestNG.privateMain(TestNG.java:1325)
	at org.testng.TestNG.main(TestNG.java:1294)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulBusinessAccountRegistration -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.test1.tests.RTest@52d455b8]" name="afterMethod" is-config="true" duration-ms="1309" started-at="2017-02-09T09:35:54Z" finished-at="2017-02-09T09:35:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.test1.tests.RTest -->
    </test> <!-- Ant test -->
  </suite> <!-- Ant suite -->
</testng-results>
